package android.example.djlee.sensortest;

import android.R.color;
import android.app.Activity;
import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.hardware.Sensor;
import android.hardware.SensorEvent;
import android.hardware.SensorEventListener;
import android.hardware.SensorManager;
import android.os.Bundle;
import android.view.View;

public class MainActivity extends Activity {

	class SensorView extends View implements SensorEventListener{
		int m_x = 0; int m_y = 0;
		SensorManager sensorManager; String m_str;
		public SensorView(Context context) {
			super(context);
			sensorManager = (SensorManager)context.getSystemService(
				Context.SENSOR_SERVICE);
			sensorManager.registerListener(this,
				sensorManager.getDefaultSensor(Sensor.TYPE_ORIENTATION),
				SensorManager.SENSOR_DELAY_GAME);
			//SensorManager.SENSOR_DELAY_FATEST : 가장빠른 센서업데이트 속도
			//SensorManager.SENSOR_DELAY_GAME : 게임 제어에 적합한 속도
			//SensorManager.SENSOR_DELAY_NORMAL: 기본적인 속도
			//SensorManager.SENSOR_DELAY_UI : 화면처리에 적합한 속도
		}
		protected void onDraw(Canvas canvas) {
			Bitmap img = BitmapFactory.decodeResource(getResources(), 
					R.drawable.ic_launcher);
			canvas.drawBitmap(img, m_x, m_y, null);
			Paint p = new Paint(); p.setTextSize(30);
			p.setColor(Color.WHITE);
			canvas.drawText(m_str, 0, 20, p);
		}
		public void onSensorChanged(SensorEvent event) {
			synchronized(this){
				switch(event.sensor.getType()){
				case Sensor.TYPE_ORIENTATION:
					float heading = event.values[0];
					float pitch = event.values[1];
					float roll = event.values[2];
		//SensorEvent.values[]배열:센서 이벤트의 종류에 따른 센서 데이터를 보관하는 배열
		//헤딩:0부터 360까지의 값을 가진다.단말기를 눕혀 놓은 상태에서 빙글 빙글 돌릴 때 발생
		//피치:단말기를 눕혔다 세웠다 할 때 발생. 단말기가 하늘을 향할 때 : -90.
		//		단말기가 바닥에 있을 때 : 180, 뒤집혀 있을 때 : -180
		//롤 : 기기를 좌,우로 기울임에 따라 -90에서 90값을 갖는다.
		//	  	단말기를 눕힌 상태에서 화면을 내쪽, 혹은 화면을 반대방향으로 할 때 발생
		//피치와 롤은 단말기를 평평한 곳에 두었을 때는 0이 된다.
					m_str = "방향데이터:";
					m_str= m_str+"Heading:"+String.valueOf(heading);
					m_str=m_str+" Pitch:"+String.valueOf(pitch);
					m_str=m_str+" Roll:"+String.valueOf(roll);
					//이미지 좌표
					m_x = m_x - (int)roll;
					m_y = m_y - (int)pitch;
					
					if(m_x <= 0) m_x = 0;
					if(m_y <= 0) m_y = 0;
					if(m_x >= (getWidth() - 50)) m_x=getWidth()-50;
					if(m_y >= (getHeight()-50))m_y=getHeight()-50;
					//좌표가 0보다 작아지는 것을 방지,좌표가 화면을 벗어나는 것을 방지
					//50은 안드로이드 이미지의 가로세로크기
					break;
				}//센서의 종류가 방향 센서일 경우만 처리
			}
			invalidate();//onDraw()메서드 실행
		}
		public void onAccuracyChanged(Sensor sensor, int accuracy) {
		}
	}
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(new SensorView(this));
	}
}









